* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}


/* FLEX CONTAINER PARENT */

.container {
    height: 400px;
    border: 2px solid red;
    display: flex;
    /* flex-direction: row; */
    /* The flex-direction property defines in which direction the container wants to
stack the flex items. */

    /* flex-wrap: wrap; */
    /* The flex-wrap property specifies whether the flex items should wrap or not. */

    flex-flow: row nowrap;
    /* flex-flow: row wrap; */
    /* Instead of using both direction and wrap we can just use flex flow */
    /* The flex-flow property is a shorthand property for setting both the flex-direction
and flex-wrap properties. */

    justify-content: center;
    /* The justify-content property is used to align the flex items in main-axis (horizontally) */

    align-items: center;
    /* The align-items property is used to align the flex items in cross-axis (vertically) */

    align-content: center;
    /* The align-content property is used to align the flex lines. */

    /* gap: 20px; */
    /* To give 20 px gap between the boxes */
    
    /* row-gap: 10px; */
    /* column-gap: 10px; */
    /* gap: 10px 10px; */
    /* shorthand property for row and column gap */

    /* To put soemthing in the middle using flex, just use justify-content and align-items and set them to center. */

    /* https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox */
}



/* FLEX CONTAINER CHILDREN */

.box {
    border: 2px solid green;
    width: 60px;
    /* flex-grow: 1; */
    /* The flex-grow property specifies how much a flex item will grow relative to the rest of the flex items. The value must be a number, the default value is 0. */

    /* flex-basis: 25%; */
    /* 4 boxes would be there in one row */
}

#box-3 {
    /* order: 1; */
    /* The order property specifies the order of the flex items. The order value must be a number, the default value is 0. */
    /* First the default order: 0 will be displayed and then box-3 with order 1. */
    
    /* flex-shrink: 2; */
    /* The flex-shrink property specifies how much a flex item will shrink relative to the rest of the flex items. The value must be a number, the default value is 1. */

    /* flex-basis: 200px; */
    /* The flex-basis property specifies the initial length of a flex item. */

    flex: 0 2 150px;
    /* The flex property is a shorthand property for the flex-grow, flex-shrink, and flex-basis properties. */

}

#box-2 {
    /* order: 3; */
}

#box-5 {
    /* order: 2; */
}

#box-6 {
    align-self: stretch;
    /* Make sure nowrap is applied.
    The align-self property specifies the alignment for the selected item inside the flexible container.
    The align-self property overrides the default alignment set by the container's align-items property. */
}