/* To selct all the elements use *     */
* {
    box-sizing: border-box;
}

.allColumns {
    float: left;
    width: 33.33%;
    padding: 10px;
}

.row::after {
    content: "";
    clear: both;
    display: table;
}

@media screen and (max-width: 1024px) {
    .allColumns {
        width: 50%; /* 2 columns in tablet mode */
    }
}

@media screen and (max-width: 480px) {
    .allColumns {
        width: 100%; /* 1 column in phone mode */
    }
}

/* 
1. `* { box-sizing: border-box; }`: This is a universal selector (`*`) that selects all HTML elements on the page.
The `box-sizing` property is set to `border-box`, which means that the element's padding and border are included in its total width
and height. This ensures that when you set the width and height of an element, it includes padding and borders, preventing unexpected
layout issues.

2. `.allColumns { float: left; width: 33.33%; padding: 10px; }`: This defines a CSS class named `.allColumns`. Elements with this class
will have the following properties:
   - `float: left;`: This property makes the elements float to the left within their container. It allows multiple elements to appear
   side by side horizontally.
   - `width: 33.33%;`: It sets the width of each element to approximately one-third (1/3) of the container's width. This is used to
   create a three-column layout. The total width of the columns sums up to 100%.
   - `padding: 10px;`: Adds 10 pixels of padding to all sides of each column. This creates spacing around the content inside each column.

3. `.row::after { content: ""; clear: both; display: table; }`: This CSS rule targets elements with the class `.row`. It is used to clear
the floated elements and maintain proper layout. Here's what each property does:
   - `content: "";`: Inserts an empty content box into the `.row` element. This is used with the `::after` pseudo-element to create a
   clearing element.
   - `clear: both;`: Clears any floated elements (in this case, the columns with the class `.allColumns`) that appear above the
   clearing element. It ensures that elements after the floated elements are not affected by the floating.
   - `display: table;`: The `display` property is set to `table` to trigger block formatting context, which helps with clearing
   the floats. It's a common technique for clearing floated elements.

4. `@media screen and (max-width: 768px) { .allColumns { width: 100%; } }`: This is a media query that targets screens with a
maximum width of 768 pixels (typical for tablet-sized screens). Within this media query, elements with the class `.allColumns`
will have their width set to 100%, making them span the full width of the container. This allows for a single-column layout on smaller
screens, ensuring responsiveness. */